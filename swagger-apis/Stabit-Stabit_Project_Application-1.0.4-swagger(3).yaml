swagger: '2.0'
info:
  description: This is a project application API
  version: 1.0.4
  title: Project Application API
  # put the contact info for your development or API team
  contact:
    email: argrabowski@wpi.edu
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
    
# tags are used for organizing operations
tags:
- name: admins
  description: Secured Admin-only calls
- name: users
  description: Operations available to regular users
  
paths:
  /createProject:
    post:
      operationId: "projectCreate"
      description: "By passing in the appropriate options, you can create a project"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "createProjectRequest"
        required: true
        schema:
          $ref: "#/definitions/createProjectRequest"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/createProjectResponse"
        "400":
          description: "400 error response"
          schema:
            $ref: "#/definitions/GenericErrorResponse"
      tags:
      - "users"
      
  /viewProjectView:
    get:
      operationId: "projectView"
      description: "By passing in the appropriate options, you can view the project view"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        "400":
          description: "400 error response"
          schema:
            $ref: "#/definitions/GenericErrorResponse"
      tags:
      - "users"
      
  /viewTeamView:
    get:
      operationId: "teamView"
      description: "By passing in the appropriate options, you view the team view"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        "400":
          description: "400 error response"
          schema:
            $ref: "#/definitions/GenericErrorResponse"
      tags:
      - "users"
      
  /addTeammate:
    post:
      operationId: "teammateAdd"
      description: "By passing in the appropriate options, you can add a teammate to a project"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "addTeammateRequest"
        required: true
        schema:
          $ref: "#/definitions/addTeammateRequest"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/addTeammateResponse"
        "400":
          description: "400 error response"
          schema:
            $ref: "#/definitions/GenericErrorResponse"
      tags:
      - "users"
      
  /removeTeammates:
    post:
      operationId: "teammatesRemove"
      description: "By passing in the appropriate options, you can remove teammates from a project"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "removeTeammatesRequest"
        required: true
        schema:
          $ref: "#/definitions/removeTeammatesRequest"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/removeTeammatesResponse"
        "400":
          description: "400 error response"
          schema:
            $ref: "#/definitions/GenericErrorResponse"
      tags:
      - "users"
      
  /addTasks:
    post:
      operationId: "tasksAdd"
      description: "By passing in the appropriate options, you can add tasks to a project"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "addTasksRequest"
        required: true
        schema:
          $ref: "#/definitions/addTasksRequest"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/addTasksResponse"
        "400":
          description: "400 error response"
          schema:
            $ref: "#/definitions/GenericErrorResponse"
      tags:
      - "users"
      
  /decomposeTask:
    post:
      operationId: "taskDecompose"
      description: "By passing in the appropriate options, you can decompose a task"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "decomposeTaskRequest"
        required: true
        schema:
          $ref: "#/definitions/decomposeTaskRequest"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/decomposeTaskResponse"
        "400":
          description: "400 error response"
          schema:
            $ref: "#/definitions/GenericErrorResponse"
      tags:
      - "users"
      
  /markTask:
    post:
      operationId: "taskMark"
      description: "By passing in the appropriate options, you can mark a task"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "markTaskRequest"
        required: true
        schema:
          $ref: "#/definitions/markTaskRequest"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/markTaskResponse"
        "400":
          description: "400 error response"
          schema:
            $ref: "#/definitions/GenericErrorResponse"
      tags:
      - "users"
      
  /assignTeammatesToTask:
    post:
      operationId: "teammatesAssignToTask"
      description: "By passing in the appropriate options, you can assign teammates to a task"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "assignTeammatesToTaskRequest"
        required: true
        schema:
          $ref: "#/definitions/assignTeammatesToTaskRequest"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/assignTeammatesToTaskResponse"
        "400":
          description: "400 error response"
          schema:
            $ref: "#/definitions/GenericErrorResponse"
      tags:
      - "users"
      
  /unassignTeammatesFromTask:
    post:
      operationId: "teammatesUnassignFromTask"
      description: "By passing in the appropriate options, you unassign teammates from a task"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "unassignTeammatesFromTaskRequest"
        required: true
        schema:
          $ref: "#/definitions/unassignTeammatesFromTaskRequest"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/unassignTeammatesFromTaskResponse"
        "400":
          description: "400 error response"
          schema:
            $ref: "#/definitions/GenericErrorResponse"
      tags:
      - "users"
      
  /renameTask:
    post:
      operationId: "taskRename"
      description: "By passing in the appropriate options, you can rename a task"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "renameTaskRequest"
        required: true
        schema:
          $ref: "#/definitions/renameTaskRequest"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/renameTaskResponse"
        "400":
          description: "400 error response"
          schema:
            $ref: "#/definitions/GenericErrorResponse"
      tags:
      - "users"
      
  /archiveProject:
    post:
      operationId: "projectArchive"
      description: "By passing in the appropriate options, you can archive a project"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "archiveProjectRequest"
        required: true
        schema:
          $ref: "#/definitions/archiveProjectRequest"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/archiveProjectResponse"
        "400":
          description: "400 error response"
          schema:
            $ref: "#/definitions/GenericErrorResponse"
      tags:
      - "admins"
      
  /deleteProject:
    post:
      operationId: "projectDelete"
      description: "By passing in the appropriate options, you can delete a project"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "deleteProjectRequest"
        required: true
        schema:
          $ref: "#/definitions/deleteProjectRequest"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/deleteProjectResponse"
        "400":
          description: "400 error response"
          schema:
            $ref: "#/definitions/GenericErrorResponse"
      tags:
      - "admins"
      
  /listProjects:
    get:
      operationId: "projectList"
      description: "By passing in the appropriate options, you can list all user projects"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/listProjectsResponse"
        "400":
          description: "400 error response"
          schema:
            $ref: "#/definitions/GenericErrorResponse"
      tags:
      - "admins"
      
definitions:
  Project:
    type: "object"
    required:
    - "name"
    - "id"
    - "isArchived"
    - "completionStatus"
    - "teammates"
    - "tasks"
    properties:
      name:
        type: "string"
      id:
        type: "string"
      isArchived:
        type: "boolean"
      completionStatus:
        type: "integer"
      teammateIDs:
        type: "array"
        items:
          type: "string"
      taskIDs:
        type: "array"
        items:
          type: "array"
          items:
            type: "integer"
  Teammate:
    type: "object"
    required:
    - "name"
    - "projectName"
    - "taskIDs"
    properties:
      name:
        type: "string"
	  projetName:
		type: "string"
      taskIDs:
        type: "array"
        items:
          type: "array"
          items:
            type: "integer"
  Task:
    type: "object"
    required:
    - "name"
	- "outlineIdentifier"
	- "projectName"
    - "id"
	- "teammateIDs"
    - "isMarked"
	- "hasSubtasks"
    properties:
      name:
        type: "string"
	  projectName:
		type: "string"
	  outlineIdentifier:
        type: "string"
      id:
        type: "string"
      teammateIDs:
        type: "array"
        items:
          type: "string"
	  isMarked:
        type: "boolean"
	  hasSubtasks:
        type: "boolean"
          
  createProjectRequest:
    type: "object"
    required:
    - "name"
    - "id"
    - "taskNames"
    - "teammateNames"
    properties:
      name:
        type: "string"
      id:
        type: "string"
      taskNames:
        type: "array"
        items:
          type: "string"
      teammateNames:
        type: "array"
        items:
          type: "string"
  createProjectResponse:
    type: "object"
    required:
    - "project"
    - "statusCode"
    - "error"
    properties:
      project:
        $ref: "#/definitions/Project"
      statusCode:
        type: "integer"
      error:
        type: "string"
        
  addTeammateRequest:
    type: "object"
    required:
    - "projectName"
    - "name"
    properties:
      projectName:
        type: "string"
      name:
        type: "string"
  addTeammateResponse:
    type: "object"
    required:
    - "project"
    - "statusCode"
    - "error"
    properties:
      project:
        $ref: "#/definitions/Project"
      statusCode:
        type: "integer"
      error:
        type: "string"
        
  removeTeammatesRequest:
    type: "object"
    required:
    - "project"
    - "teammateNames"
    properties:
      project:
        $ref: "#/definitions/Project"
      teammateNames:
        type: "array"
        items:
          type: "string"
  removeTeammatesResponse:
    type: "object"
    required:
    - "project"
    - "statusCode"
    - "error"
    properties:
      project:
        $ref: "#/definitions/Project"
      statusCode:
        type: "integer"
      error:
        type: "string"
        
  addTasksRequest:
    type: "object"
    required:
    - "project"
    - "taskNames"
    properties:
      project:
        $ref: "#/definitions/Project"
      taskNames:
        type: "array"
        items:
          type: "string"
  addTasksResponse:
    type: "object"
    required:
    - "project"
    - "statusCode"
    - "error"
    properties:
      project:
        $ref: "#/definitions/Project"
      statusCode:
        type: "integer"
      error:
        type: "string"
        
  decomposeTaskRequest:
    type: "object"
    required:
    - "id"
    - "subtaskNames"
    properties:
      id:
        type: "string"
      subtaskNames:
        type: "string"
  decomposeTaskResponse:
    type: "object"
    required:
    - "project"
    - "statusCode"
    - "error"
    properties:
      project:
        $ref: "#/definitions/Project"
      statusCode:
        type: "integer"
      error:
        type: "string"
        
  markTaskRequest:
    type: "object"
    required:
	- "id"
    properties:
	  id:
		type: "string"
  markTaskResponse:
    type: "object"
    required:
    - "project""
    - "statusCode"
    - "error"
    properties:
      project:
        $ref: "#/definitions/Project"
      statusCode:
        type: "integer"
      error:
        type: "string"
        
  assignTeammatesToTaskRequest:
    type: "object"
    required:
    - "task"
    - "teammateNames"
    properties:
      task:
        $ref: "#/definitions/Task"
      teammateNames:
        type: "array"
        items:
          type: "string"
  assignTeammatesToTaskResponse:
    type: "object"
    required:
    - "task"
    - "teammates"
    - "statusCode"
    - "error"
    properties:
      task:
        $ref: "#/definitions/Task"
      teammates:
        type: "array"
        items:
          $ref: "#/definitions/Teammate"
      statusCode:
        type: "integer"
      error:
        type: "string"
        
  unassignTeammatesFromTaskRequest:
    type: "object"
    required:
    - "task"
    - "teammateNames"
    properties:
      task:
        $ref: "#/definitions/Task"
      teammateNames:
        type: "array"
        items:
          type: "string"
  unassignTeammatesFromTaskResponse:
    type: "object"
    required:
    - "task"
    - "teammates"
    - "statusCode"
    - "error"
    properties:
      task:
        $ref: "#/definitions/Task"
      teammate:
        type: "array"
        items:
          $ref: "#/definitions/Teammate"
      statusCode:
        type: "integer"
      error:
        type: "string"
        
  renameTaskRequest:
    type: "object"
    required:
    - "task"
    - "name"
    properties:
      task:
        $ref: "#/definitions/Task"
      name:
        type: "string"
  renameTaskResponse:
    type: "object"
    required:
    - "task"
    - "statusCode"
    - "error"
    properties:
      task:
        $ref: "#/definitions/Task"
      statusCode:
        type: "integer"
      error:
        type: "string"
        
  archiveProjectRequest:
    type: "object"
    required:
    - "project"
    properties:
      project:
        $ref: "#/definitions/Project"
  archiveProjectResponse:
    type: "object"
    required:
    - "project"
    - "statusCode"
    - "error"
    properties:
      project:
        $ref: "#/definitions/Project"
      statusCode:
        type: "integer"
      error:
        type: "string"
        
  deleteProjectRequest:
    type: "object"
    required:
    - "project"
    properties:
      project:
        $ref: "#/definitions/Project"
  deleteProjectResponse:
    type: "object"
    required:
    - "projects"
    - "statusCode"
    - "error"
    properties:
      projects:
        type: "array"
        items:
          $ref: "#/definitions/Project"
      statusCode:
        type: "integer"
      error:
        type: "string"
  
  listProjectsResponse:
    type: "object"
    required:
    - "projects"
    - "statusCode"
    - "error"
    properties:
      projects:
        type: "array"
        items:
          $ref: "#/definitions/Project"
      statusCode:
        type: "integer"
      error:
        type: "string"
        
  GenericErrorResponse:
    type: "object"
    required:
    - "error"
    properties:
      error:
        type: "string"
        
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /Stabit/Stabit_Project_Application/1.0.0
schemes:
 - https